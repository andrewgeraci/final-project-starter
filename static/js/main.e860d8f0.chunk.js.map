{"version":3,"sources":["logo.svg","components.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AddSubtract","useState","value","setValue","Button","onClick","Counter","App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAAe,G,MAAA,IAA0B,kC,8BCGlC,SAASA,IACZ,MAA0BC,mBAAiB,GAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACA,OACI,iCACI,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMF,EAAS,EAAID,IAApC,qBACC,IAFL,MAEaA,EAFb,IAEqB,KACjB,cAACE,EAAA,EAAD,CAAQC,QAAS,kBAAMF,EAASD,EAAQ,IAAxC,0BAHJ,QAIMA,EAJN,OASD,SAASI,IACZ,MAA0BL,mBAAiB,GAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACA,OACI,iCACI,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMF,EAAS,EAAID,IAApC,uCACC,IAFL,MAEaA,EAFb,OCSOK,MAtBf,WACI,OACI,sBAAKC,UAAU,MAAf,UACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SAD7C,+BAGI,sCACS,+CADT,6BAIJ,8BAGI,cAACX,EAAD,MAEJ,8BACI,cAACM,EAAD,UCPDM,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.e860d8f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.4bdbcf83.svg\";","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport function AddSubtract(): JSX.Element {\n    const [value, setValue] = useState<number>(0);\n    return (\n        <span>\n            <Button onClick={() => setValue(1 + value)}>Add One</Button>\n            {\" \"}to {value}.{\"  \"}\n            <Button onClick={() => setValue(value - 1)}>Subtract One</Button>\n        from {value}.\n        </span>\n    );\n}\n\nexport function Counter(): JSX.Element {\n    const [value, setValue] = useState<number>(0);\n    return (\n        <span>\n            <Button onClick={() => setValue(1 + value)}>This Counter Will Add One</Button>\n            {\" \"}to {value}.\n        </span>\n    );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {AddSubtract, Counter} from \"./components\";\n\nfunction App(): JSX.Element {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                Welcome to UD CIS Scheduler!\n                <p>\n                    Edit <code>src/App.tsx</code> and save to reload.\n                </p>\n            </header>\n            <div>\n                {/* I figured we could each do our own counter since we need multiple custom labels. \n                Mine has the subract in it so that one's done */}\n                <AddSubtract></AddSubtract>\n            </div>\n            <div>\n                <Counter></Counter>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}