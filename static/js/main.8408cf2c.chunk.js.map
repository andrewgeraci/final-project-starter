{"version":3,"sources":["logo.svg","components.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AndrewCounter","useState","value","setValue","Button","onClick","App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAAe,G,MAAA,IAA0B,kC,8BCGlC,SAASA,IACZ,MAA0BC,mBAAiB,GAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACA,OACI,iCACI,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMF,EAAS,EAAID,IAApC,qBADJ,MAEQA,EAFR,IAEgB,KACZ,cAACE,EAAA,EAAD,CAAQC,QAAS,kBAAMF,EAASD,EAAQ,IAAxC,0BAHJ,QAIMA,EAJN,OCkBOI,MAnBf,WACI,OACI,sBAAKC,UAAU,MAAf,UACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SAD7C,WAGI,sCACS,+CADT,6BAIJ,8BAGI,cAACV,EAAD,UCJDW,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.8408cf2c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.28940f2e.svg\";","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport function AndrewCounter(): JSX.Element {\r\n    const [value, setValue] = useState<number>(0);\r\n    return (\r\n        <span>\r\n            <Button onClick={() => setValue(1 + value)}>Add One</Button>\r\n            to {value}.{\"  \"}\r\n            <Button onClick={() => setValue(value - 1)}>Subtract One</Button>\r\n        from {value}.\r\n        </span>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport {AndrewCounter} from \"./components\";\r\n\r\nfunction App(): JSX.Element {\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                Welcome!\r\n                <p>\r\n                    Edit <code>src/App.tsx</code> and save to reload.\r\n                </p>\r\n            </header>\r\n            <div>\r\n                {/* I figured we could each do our own counter since we need multiple custom labels. \r\n                Mine has the subract in it so that one's done */}\r\n                <AndrewCounter></AndrewCounter>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}